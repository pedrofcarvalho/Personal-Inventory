1. The user shall interact with the application through a Graphical User Interface                                             1| DONE - TEST DONE

2. The user shall be able to store at least 100 inventory items                                                                2| DONE - TEST DONE
    - Each inventory item shall have a value representing its monetary value in US dollars
    - Each inventory item shall have a unique serial number in the format of XXXXXXXXXX where X can be either a letter or digit
    - Each inventory item shall have a name between 2 and 256 characters in length (inclusive)

3. The user shall be able to add a new inventory item                                                                          3| DONE (Inventory List) - TEST DONE
    - The application shall display an error message if the user enters an existing serial number for the new item

4. The user shall be able to remove an existing inventory item                                                                 4| DONE (Inventory List) - TEST DONE

5. The user shall be able to edit the value of an existing inventory item                                                      5| MAYBE? DONE - TEST DONE

6. The user shall be able to edit the serial number of an existing inventory item                                              6| MAYBE? DONE - TEST DONE
    - The application shall prevent the user from duplicating the serial number

7. The user shall be able to edit the name of an existing inventory item                                                       7| NOT DONE - TEST DONE

8. The user shall be able to sort the inventory items by value                                                                 8| ALMOST DONE - (TODO) NO TEST

9. The user shall be able to sort inventory items by serial number                                                             9| ALMOST DONE - (TODO) NO TEST

10. The user shall be able to sort inventory items by name                                                                    10| ALMOST DONE - (TODO) NO TEST

11. The user shall be able to search for an inventory item by serial number                                                   11| DONE - (TODO) NO TEST

12. The user shall be able to search for an inventory item by name                                                            12| DONE - (TODO) NO TEST

13. The user shall be able to save their inventory items to a file                                                            13| DONE - TEST DONE
    -   The user shall be able to select the file format from among the following set of options: TSV (tab-separated value), HTML, JSON
            TSV files shall shall list one inventory item per line, separate each field within an inventory item using a tab character, and end with the extension .txt
            HTML files shall contain valid HTML and end with the extension .html
            JSON files shall contain valid JSON and end with the extension .json
    - The user shall provide the file name and file location of the file to save

14. The user shall be able to load inventory items from a file that was previously created by the application.                14| DONE - TEST DONE
    - The user shall provide the file name and file location of the file to load


Missing #'s 5, 6, 7








MISSING LIST: TODO: (erase these as you finish them)
- fix the edit (specially on the name column. If nothing works, add a button for it as an auxiliary feature)
- fix the sorting buttons (no clue what to do here, look for videos)
- do the loading behavior (and create the welcome screen: with "How to use", "Load from..." and "Start New List")
- DO THE TESTS!!!!!!!
- FINISH THE DIAGRAM!!!!!
- do JSON for extra credit (maybe easy?)

(for loading use: ".showOpenDialog" (not ".showSaveDialog") )



For Tests:
---------
- create the classes AFTER done all the pre-req behaviors
- use only JUnit for them
- will probably be easy, but time-consuming *******



